// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <Rcpp.h>

using namespace Rcpp;

// project_ccmpp
DataFrame project_ccmpp(int step_size, const NumericVector& P0M, const NumericVector& P0F, const NumericVector& SxM, const NumericVector& SxF, const NumericVector& asfr, const NumericVector& NMxM, const NumericVector& NMxF, double srb, int migration_assumption);
RcppExport SEXP _ccmppWPP_project_ccmpp(SEXP step_sizeSEXP, SEXP P0MSEXP, SEXP P0FSEXP, SEXP SxMSEXP, SEXP SxFSEXP, SEXP asfrSEXP, SEXP NMxMSEXP, SEXP NMxFSEXP, SEXP srbSEXP, SEXP migration_assumptionSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< int >::type step_size(step_sizeSEXP);
    Rcpp::traits::input_parameter< const NumericVector& >::type P0M(P0MSEXP);
    Rcpp::traits::input_parameter< const NumericVector& >::type P0F(P0FSEXP);
    Rcpp::traits::input_parameter< const NumericVector& >::type SxM(SxMSEXP);
    Rcpp::traits::input_parameter< const NumericVector& >::type SxF(SxFSEXP);
    Rcpp::traits::input_parameter< const NumericVector& >::type asfr(asfrSEXP);
    Rcpp::traits::input_parameter< const NumericVector& >::type NMxM(NMxMSEXP);
    Rcpp::traits::input_parameter< const NumericVector& >::type NMxF(NMxFSEXP);
    Rcpp::traits::input_parameter< double >::type srb(srbSEXP);
    Rcpp::traits::input_parameter< int >::type migration_assumption(migration_assumptionSEXP);
    rcpp_result_gen = Rcpp::wrap(project_ccmpp(step_size, P0M, P0F, SxM, SxF, asfr, NMxM, NMxF, srb, migration_assumption));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_ccmppWPP_project_ccmpp", (DL_FUNC) &_ccmppWPP_project_ccmpp, 10},
    {NULL, NULL, 0}
};

RcppExport void R_init_ccmppWPP(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
