% Generated by roxygen2: do not edit by hand
% Please edit documentation in
%   R/S3_classes_demog_change_component_utility_functions.R
\name{collapse_demog_dimension}
\alias{collapse_demog_dimension}
\title{Collapse a \code{demog_change_component_df} object across demographic dimension(s)}
\usage{
collapse_demog_dimension(
  x,
  FUN = "sum",
  ...,
  by_dimension = get_all_allowed_dimensions(),
  out_class = class(x)[1]
)
}
\arguments{
\item{x}{An object inheriting from
\code{demog_change_component_df}.}

\item{FUN}{A function to use to aggregate the \dQuote{value} column
of \code{x}; found by \code{\link{match.fun}}.}

\item{...}{Passed to
\code{\link[stats]{aggregate.data.frame}}. Must not include
arguments named \code{X}, \code{by}, or \code{FUN}.}

\item{by_dimension}{A \emph{character vector} (not a list) of
demographic \dQuote{dimensions} to aggregate over; see
\dQuote{Details}).}
}
\value{
A data frame.
}
\description{
This function conveniently collapses objects across the demographic
dimension(s) specified in \code{by_dimension}. The \dQuote{value}
column is aggregated using function \code{FUN}. Columns
corresponding to \code{by_dimension} are dropped. If you want to
aggregate other columns, or complete collapsing over a dimension is
not desired, use \code{\link[stats]{aggregate}}, or similar.
}
\details{
Argument \code{by_dimension} is a character vector and can be any
of the allowed demographic \dQuote{dimensions} such as
\dQuote{age}, \dQuote{time}, \dQuote{sex} (you can see the full
list by calling \code{ccmppWPP:::get_all_allowed_dimensions}). The
result will have values completely collapsed over the given
dimension. E.g., if \code{by_dimension = "age"} then column
\code{value} in the result will contain the original \code{value}s
aggregated over all remaining dimensions, where aggregation is done
by function \code{FUN}.

The function will try to return an object of the class given in
\code{out_class}, which is just \code{\class{x}} by default (see
the argument description for how to specify it). If a valid object
of this class cannot be created from the result an error is
signalled.
}
\examples{
x1 <- ccmpp_input_df(expand.grid(age_start = 0:5, time_start = 1950:1954, value = 1),
                   value_type = "count")
x1_agg <- collapse_demog_dimension(x1, by_dimension = "time")
stopifnot("ccmpp_input_df" \%in\% class(x1_agg))


## When the result is not a valid member of the class:

x2 <- subset(x1, age_start != 0)
stopifnot(identical(class(x2), "data.frame"))

x2 <- demog_change_component_df(x2, value_type = "count", value_scale = 1)
# Force an invalid object (do not try this at home!):
class(x2) <- c("ccmpp_input_df", "demog_change_component_df", "data.frame")
\dontrun{
x2_agg <- collapse_demog_dimension(x2, by_dimension = "age") # exits with an error message
}

# Coerce object
x2_dcc <- demog_change_component_df(x2, value_type = "count", value_scale = 1)
x2_dcc_agg <- collapse_demog_dimension(x2_dcc, by_dimension = "age") # OK
stopifnot(identical(class(x2_dcc_agg), c("demog_change_component_df", "data.frame")))

# Specify 'out_class'
x2_dcc_agg <- collapse_demog_dimension(x2, by_dimension = "age", out_class = "demog_change_component_df") # OK
stopifnot(identical(class(x2_dcc_agg), c("demog_change_component_df", "data.frame")))


## Coercing 'x' to a data.frame.

x3 <- as.data.frame(x1) # will issue a warning that class is dropped
x3_agg <- collapse_demog_dimension(x3, by_dimension = "time")
stopifnot(identical(class(x3_agg, "data.frame"))

# Can re-cast as a 'demog_change_component_df'
x_agg_dcc <- as_demog_change_component_df(x3_agg)

}
\seealso{
\code{\link[stats]{aggregate}}, \code{link{abridge}}
    \code{\link{demog_change_component_df}}
}
\author{
Mark Wheldon
}
