% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/S3_classes_ccmpp_input_df_utility_functions.R,
%   R/S3_classes_demog_change_component_utility_functions.R,
%   R/S3_classes_fert_rate_input_df.R, R/S3_classes_life_table_input_df.R,
%   R/S3_classes_mig_net_count_input_df.R,
%   R/S3_classes_mig_net_count_tot_input_df.R,
%   R/S3_classes_mig_net_prop_input_df.R, R/S3_classes_mig_net_rate_input_df.R,
%   R/S3_classes_mig_parameter_input_df.R, R/S3_classes_pop_count_base_input.R,
%   R/S3_classes_srb_input_df.R, R/S3_classes_survival_ratio_input_df.R
\name{subset_indicator.ccmpp_input_df}
\alias{subset_indicator.ccmpp_input_df}
\alias{subset_time.ccmpp_input_df}
\alias{subset_age.ccmpp_input_df}
\alias{subset_sex.ccmpp_input_df}
\alias{subset_demog_change_component_df}
\alias{subset_time}
\alias{subset_time.demog_change_component_df}
\alias{subset_age}
\alias{subset_age.demog_change_component_df}
\alias{subset_sex}
\alias{subset_sex.demog_change_component_df}
\alias{subset_indicator}
\alias{subset_indicator.demog_change_component_df}
\alias{subset_time.fert_rate_age_f}
\alias{subset_age.fert_rate_age_f}
\alias{subset_indicator.life_table_age_sex}
\alias{subset_time.life_table_age_sex}
\alias{subset_age.life_table_age_sex}
\alias{subset_sex.life_table_age_sex}
\alias{subset_time.mig_net_count_age_sex}
\alias{subset_age.mig_net_count_age_sex}
\alias{subset_sex.mig_net_count_age_sex}
\alias{subset_time.mig_net_count_tot_b}
\alias{subset_time.mig_net_prop_age_sex}
\alias{subset_age.mig_net_prop_age_sex}
\alias{subset_sex.mig_net_prop_age_sex}
\alias{subset_time.mig_net_rate_age_sex}
\alias{subset_age.mig_net_rate_age_sex}
\alias{subset_sex.mig_net_rate_age_sex}
\alias{subset_time.mig_parameter}
\alias{subset_time.pop_count_age_sex_base}
\alias{subset_age.pop_count_age_sex_base}
\alias{subset_sex.pop_count_age_sex_base}
\alias{subset_time.srb}
\alias{subset_time.survival_ratio_age_sex}
\alias{subset_age.survival_ratio_age_sex}
\alias{subset_sex.survival_ratio_age_sex}
\title{Subset by time, age, or sex}
\usage{
\method{subset_indicator}{ccmpp_input_df}(x, indicators, drop = FALSE)

\method{subset_time}{ccmpp_input_df}(x, times, drop = FALSE)

\method{subset_age}{ccmpp_input_df}(x, ages, drop = FALSE)

\method{subset_sex}{ccmpp_input_df}(x, sexes, drop = FALSE)

subset_time(x, times, ...)

\method{subset_time}{demog_change_component_df}(x, times, drop = FALSE)

subset_age(x, ages, ...)

\method{subset_age}{demog_change_component_df}(x, ages, drop = FALSE)

subset_sex(x, sexes, ...)

\method{subset_sex}{demog_change_component_df}(x, sexes = get_all_allowed_sexes(), drop = FALSE)

subset_indicator(x, indicators, ...)

\method{subset_indicator}{demog_change_component_df}(x, indicators, drop = FALSE)

\method{subset_time}{fert_rate_age_f}(x, times, drop = FALSE)

\method{subset_age}{fert_rate_age_f}(x, ages, drop = FALSE)

\method{subset_indicator}{life_table_age_sex}(x, indicators, drop = FALSE)

\method{subset_time}{life_table_age_sex}(x, times, drop = FALSE)

\method{subset_age}{life_table_age_sex}(x, ages, drop = FALSE)

\method{subset_sex}{life_table_age_sex}(x, sexes, drop = FALSE)

\method{subset_time}{mig_net_count_age_sex}(x, times, drop = FALSE)

\method{subset_age}{mig_net_count_age_sex}(x, ages, drop = FALSE)

\method{subset_sex}{mig_net_count_age_sex}(x, sexes, drop = FALSE)

\method{subset_time}{mig_net_count_tot_b}(x, times, drop = FALSE)

\method{subset_time}{mig_net_prop_age_sex}(x, times, drop = FALSE)

\method{subset_age}{mig_net_prop_age_sex}(x, ages, drop = FALSE)

\method{subset_sex}{mig_net_prop_age_sex}(x, sexes, drop = FALSE)

\method{subset_time}{mig_net_rate_age_sex}(x, times, drop = FALSE)

\method{subset_age}{mig_net_rate_age_sex}(x, ages, drop = FALSE)

\method{subset_sex}{mig_net_rate_age_sex}(x, sexes, drop = FALSE)

\method{subset_time}{mig_parameter}(x, times, drop = FALSE)

\method{subset_time}{pop_count_age_sex_base}(x, times, drop = FALSE)

\method{subset_age}{pop_count_age_sex_base}(x, ages, drop = FALSE)

\method{subset_sex}{pop_count_age_sex_base}(x, sexes, drop = FALSE)

\method{subset_time}{srb}(x, times, drop = FALSE)

\method{subset_time}{survival_ratio_age_sex}(x, times, drop = FALSE)

\method{subset_age}{survival_ratio_age_sex}(x, ages, drop = FALSE)

\method{subset_sex}{survival_ratio_age_sex}(x, sexes, drop = FALSE)
}
\arguments{
\item{x}{An object to subset.}

\item{indicators, times, ages, sexs}{Vectors indicating the levels of
time, age, or sex to retain.}

\item{drop}{Logical; should demographic change component dimensions
with only one level be dropped?}
}
\value{
The object after subsetting if a valid member of the class;
    otherwise an error.
}
\description{
These functions subset objects inheriting from
\code{demog_change_component_df} by one of the four dimensions,
indicator, age, time, or sex, and retain the class if valid (see
\dQuote{Details}). Subsetting such that only one level of the
subset dimension is retained will drop the dimension if \code{drop
= TRUE}, otherwise it is retained (default).
}
\details{
If the object returned after subsetting is a valid member of the
original class it will be returned (valid according to
\code{\link{validate_ccmpp_object}}). If it is not valid an error
will be signalled and nothing is returned.
}
\section{Note}{

These functions are not particularly efficient. For repeated
subsetting within, e.g., a for loop, it is better to use standard
subsetting operations on the data frame component and re-cast the
result as a classed object at the end if desired.
}

\seealso{
Other subset_by_demographic_dimension: 
\code{\link{subset_ccmpp_input_list}}
}
\author{
Mark Wheldon
}
\concept{subset_by_demographic_dimension}
